name: containers-deploy

on:
  workflow_call:

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT }}
  CLIENT_INSTANCE: ${{ vars.CLIENT_INSTANCE }}
  SERVER_INSTANCE: ${{ vars.SERVER_INSTANCE }}
  GCP_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}

jobs:
  setup-containers:
    name: Create images for VMs
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        ref: 'main'
        fetch-depth: 0

    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        java-version: '19'
        distribution: 'temurin'

    # GCP authentication via credentials json (TODO replace by OpenId)
    - id: 'auth'
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

    # Setup gcloud CLI
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1

    # Configure Docker to use the gcloud command-line tool as a credential helper for authentication
    - run: |-
        gcloud --quiet auth configure-docker

    # Purge old containers
    - name: Purge old images
      run: |-
        gcloud container images list-tags gcr.io/$PROJECT_ID/$SERVER_INSTANCE-image \
          --format="get(digest)" | \
          awk -v image_path="gcr.io/$PROJECT_ID/$SERVER_INSTANCE-image@" '{print image_path $1}' | \
          xargs -r gcloud container images delete --force-delete-tags --quiet
        gcloud container images list-tags gcr.io/$PROJECT_ID/$CLIENT_INSTANCE-image \
          --format="get(digest)" | \
          awk -v image_path="gcr.io/$PROJECT_ID/$CLIENT_INSTANCE-image@" '{print image_path $1}' | \
          xargs -r gcloud container images delete --force-delete-tags --quiet

    # Build the Docker images
    - name: Build containers
      run: |-
        git checkout ${GITHUB_REF##*/}
        ./gradlew gatling:build
        cp gatling/build/libs/gatling-1.0-SNAPSHOT-all.jar /tmp
        git checkout main
        cp /tmp/gatling-1.0-SNAPSHOT-all.jar containers/client/
        docker build --tag "gcr.io/$PROJECT_ID/$SERVER_INSTANCE-image:latest" containers/server
        docker build --tag "gcr.io/$PROJECT_ID/$CLIENT_INSTANCE-image:latest" containers/client

    # Push the Docker image to Google Container Registry
    - name: Push containers to GCR
      run: |-
        docker push "gcr.io/$PROJECT_ID/$SERVER_INSTANCE-image:latest"
        docker push "gcr.io/$PROJECT_ID/$CLIENT_INSTANCE-image:latest"
